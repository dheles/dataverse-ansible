# setup vars
environ:                  "preprod" # dev || test || stage || preprod || prod
login_user_passphrase:    "{{ vault_login_user_passphrase }}"
debugging:                False
set_up_tests:             False

hostname:                 "archive.data.jhu.edu"
# apache vars
apache_fqdn:              "dataverse-prod.mse.jhu.edu"

# firewalld vars
firewalld_ipsets:
- name: monitoring_whitelist
  ips:
    - "{{ nagios_ip }}"
nagios_ip:                    "{{ vault_nagios_ip }}"
monitoring_port:              5666
monitoring_accept_rule_nolog: 'rule family="ipv4" source ipset="monitoring_whitelist" port port="{{ monitoring_port }}" protocol="tcp" accept'
monitoring_accept_rule:       'rule family="ipv4" source ipset="monitoring_whitelist" port port="{{ monitoring_port }}" protocol="tcp" log prefix="monitoring-access-allowed" level="info" limit value="1/m" accept'
monitoring_reject_rule:       'rule family="ipv4" source NOT ipset="monitoring_whitelist" port port="{{ monitoring_port }}" protocol="tcp" log prefix="monitoring-access-denied" level="info" limit value="1/m" reject'
firewalld_richrules:
  # NOTE: differs from default in that whitelisted requests are not logged
  - rule: "{{ monitoring_accept_rule_nolog }}"
    state: enabled
  # NOTE: this does not differ from default, but since we are overriding the accept rule, we must also specify the reject rule
  - rule: "{{ monitoring_reject_rule }}"
    state: enabled

# branding vars
dataverse_app_name:           "dataverse"
dataverse_resources_path:     "{{ dataverse.glassfish.root }}/glassfish/domains/{{ dataverse.glassfish.domain }}/applications/{{ dataverse_app_name }}/resources"

# SSL vars
ssl_certificate_file:       "{{ vault_ssl_certificate_file }}"
ssl_certificate_key_file:   "{{ vault_ssl_certificate_key_file }}"

dataverse_mountpoint: "/mnt/dvn"
dataverse_filesdir: "{{ dataverse_mountpoint }}/dv-content"
# prod - sam.mse.jhu.edu:/exports/apps/dvn      /mnt/dvn        nfs     rw,vers=3,proto=tcp    0 0
stores_fstab:
- name:   "/mnt/dvn"
  src:    "sam.mse.jhu.edu:/exports/apps/dvn"
  fstype: "nfs"
  opts:   "rw,vers=3,proto=tcp"
  state:  "mounted"

updated_options: [] # NOTE: remove [] to use
# - option: "dataverse.files.directory"
#   value:  "{{ dataverse_filesdir }}"
