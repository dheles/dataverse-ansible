# REM: if you are looking for passwords or other variables
# that vary from dev to stage to prod, check the other subfolders

# setup vars
project:        "dataverse"
version:        "0.3.0"
login_user:     "deploy"
login_group:    "{{ login_user }}"

# testing vars
set_up_tests:   true

dataverse:
  adminpass: "{{ vault_dataverse_adminpass }}"
  allow_signups: true
  api:
    blocked_endpoints: "admin,test"
    blocked_policy: "localhost-only"
    location: "http://localhost:8080/api"
  copyright: ", Johns Hopkins University"
  db: dvndb
  dbhost: localhost
  dbuser: "{{ vault_dataverse_dbuser }}"
  dbpass: "{{ vault_dataverse_dbpass }}"
  dbport: 5432
  demo: false
  doi:
    prefix: "10.7281/T1"
    protocol:
    separator: "/"
    service: EZID
  filesdir: /usr/local/dvn/data
  glassfish:
    user: glassfish
    group: glassfish
    root: /usr/local/glassfish4
    domain: domain1
    logformat: ulf
    adminuser: "{{ vault_dataverse_glassfish_adminuser }}"
    adminpass: "{{ vault_dataverse_glassfish_adminpass }}"
    timeout: 180
  google_analytics_key: "{{ vault_dataverse_google_analytics_key }}"
  memheap: 1024
  service_email: "{{ vault_dataverse_service_email }}"
  service_name: localhost #archive.data.jhu.edu
  shibboleth:
    enabled: false
    repo: "http://download.opensuse.org/repositories/security:/shibboleth/CentOS_7/security:shibboleth.repo"
  smtp: "{{ vault_dataverse_smtp }}"
  solr:
    group: solr
    root: /usr/local/solr
    user: solr
    version: 7.3.0
  thumbnails: true
  version: 4.9.1
rserve:
  host: localhost
  user: "{{ vault_rserve_user }}"
  pass: "{{ vault_rserve_pass }}"
  port: 6311

# db vars
db_name:                "{{ dataverse.db }}"
db_user:                "{{ dataverse.dbuser }}"
db_password:            "{{ dataverse.dbpass }}"
db_backup_file:         "dataverse_{{ environ }}_backup.sql"
copy_backup_file:       "dataverse_prod_backup.sql"
db_retain_backup:       true
db_fresh_backup:        false
# postgres_jdbc_version:  "42.2.3"
postgres_jdbc_driver:   "postgresql-{{ postgres_jdbc_version }}.jar"
postgres_hba_entries:
- type:                 "local"
  database:             "all"
  user:                 "postgres"
  method:               "ident"
- type:                 "local"
  database:             "{{ db_name }}"
  user:                 "{{ db_user }}"
  method:               "md5"
- type:                 "host"
  database:             "{{ db_name }}"
  user:                 "{{ db_user }}"
  address:              "samenet"
  method:               "md5"

# upgrade vars
dvu_current_version:  "4.6"
dvu_target_version:   "{{ dataverse.version }}"

# apache vars
apache_config_template: "templates/ssl.conf.j2"
apache_config_file:     "/etc/httpd/conf.d/ssl.conf"
apache_log_path:        "/var/log/httpd"
apache_log_level:       "warn"

# SSL vars
ssl_certificate_path:           "/etc/pki/tls/certs"
ssl_certificate_key_path:       "/etc/pki/tls/private"
ssl_certificate_file:           "localhost.crt"
ssl_certificate_key_file:       "localhost.key"
ssl_certificate_chain_file:     false

dvu_versions_extra:
- version:            "4.9.1"
  metadata:
  - file:     "dataContext.tsv"
    url:      "https://raw.githubusercontent.com/jhu-sheridan-libraries/dataverse-ansible-role/master/files/dv-mdblocks"
  - file:     "jhuSoftware.tsv"
    url:      "https://raw.githubusercontent.com/jhu-sheridan-libraries/dataverse-ansible-role/master/files/dv-mdblocks"

instance_md_blocks:
- "dataContext"
- "jhuSoftware"
